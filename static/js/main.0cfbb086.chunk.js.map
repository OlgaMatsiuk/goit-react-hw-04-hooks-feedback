{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","text","FeedbackOptions","options","onLeaveFeedback","container","map","option","type","onClick","button","Section","title","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","values","reduce","acc","feedback","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,gBCA1ED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,sICsBlDC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAGC,UAAWC,IAAOC,KAArB,mBAAkCP,KAClC,oBAAGK,UAAWC,IAAOC,KAArB,sBAAqCN,KACrC,oBAAGI,UAAWC,IAAOC,KAArB,kBAAiCL,KACjC,oBAAGG,UAAWC,IAAOC,KAArB,oBAAmCJ,KACnC,oBAAGE,UAAWC,IAAOC,KAArB,gCAA+CH,EAA/C,W,gBCoBSI,EA3BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACE,qBAAKL,UAAWC,IAAOK,UAAvB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SAELC,QAAS,WACPL,EAAgBG,IAElBR,UAAWC,IAAOU,OANpB,SAQGH,GANIA,W,gBCMFI,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASd,UAAWC,IAAOK,UAA3B,UACE,oBAAIN,UAAWC,IAAOY,MAAtB,SAA8BA,IAC7BC,MCCUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCqF3BC,EAjFH,WAOV,MAAwBC,mBAAS,GAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBwB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOrB,EAAP,KAAYwB,EAAZ,KA+BMC,EAAqB,WACzB,OAAOC,OAAOC,OAAO,CAAE7B,OAAMC,UAASC,QAAO4B,QAC3C,SAACC,EAAKC,GAAN,OAAmBD,EAAMC,IACzB,IAaF,OACE,qCACE,cAAC,EAAD,CAASd,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAPM,CAAC,OAAQ,UAAW,OAQ1BC,gBA7CgB,SAAAI,GACxB,OAAQA,GACN,IAAK,OACHU,GAAQ,SAAAS,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHR,GAAW,SAAAQ,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHP,GAAO,SAAAO,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAiCA,cAAC,EAAD,CAASf,MAAM,aAAf,SACGS,IAAuB,EACtB,cAAC,EAAD,CACE3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,IACPvB,mBAvBVuB,IACIO,KAAKC,MAAc,IAAPnC,EAAc2B,KAC1B,IAwBI,cAAC,EAAD,CAAcN,QAAQ,4BC3ElCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0cfbb086.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__2det3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__3VSKx\",\"button\":\"FeedbackOptions_button__1Fne4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1zaeP\",\"title\":\"Section_title__2C9HM\"};","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p className={styles.text}>Good: {good}</p>\r\n      <p className={styles.text}>Neutral: {neutral}</p>\r\n      <p className={styles.text}>Bad: {bad}</p>\r\n      <p className={styles.text}>Total: {total}</p>\r\n      <p className={styles.text}>Positive feedback: {positivePercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.string.isRequired,\r\n  neutral: PropTypes.string.isRequired,\r\n  bad: PropTypes.string.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        {options.map(option => (\r\n          <button\r\n            type=\"button\"\r\n            key={option}\r\n            onClick={() => {\r\n              onLeaveFeedback(option);\r\n            }}\r\n            className={styles.button}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.oneOf(['good', 'neutral', 'bad']))\r\n    .isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","  \r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.container}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import { useState } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nconst App = () => {\n\n  // state = {\n  //   good: 0,\n  //   neutral: 0,\n  //   bad: 0,\n  // };\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  // incrementFeedback = stateName => {\n  //   this.setState(prevState => ({\n  //     [stateName]: prevState[stateName] + 1,\n  //   }));\n  // };\n  const incrementFeedback = type => {\n    switch (type) {\n      case 'good':\n        setGood(prevState => prevState + 1 );\n        break;\n      \n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      \n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      \n      default:\n        return;\n    }\n  }\n\n  // countTotalFeedback = () =>\n  //   Object.values(this.state).reduce(\n  //     (total, stateQuantity) => total + stateQuantity,\n  //     0,\n  //   );\n  const countTotalFeedback = () => {\n    return Object.values({ good, neutral, bad }).reduce(\n      (acc, feedback) => acc + feedback,\n      0,\n    );\n  };\n\n  const countPositiveFeedbackPercentage = () =>\n    countTotalFeedback()\n      ? Math.round((good * 100) / countTotalFeedback())\n      : 0;\n\n      \n  const options = ['good', 'neutral', 'bad'];\n  \n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={incrementFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}